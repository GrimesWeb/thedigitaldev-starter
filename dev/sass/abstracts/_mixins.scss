// Center align child element in container using flexbox (recommended)
@mixin center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Vertically center any element using non-flexbox
@mixin transform-center {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

@mixin abs-position ($top, $right, $bottom, $left) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
 }

 @mixin arrow($direction: down, $size: 5px, $color: #555) {
    width: 0;
    height: 0;
    @if ($direction == left) {
       border-top: $size solid transparent;
       border-bottom: $size solid transparent;
       border-right: $size solid $color;
    }
    @else if ($direction == right) {
       border-top: $size solid transparent;
       border-bottom: $size solid transparent;
       border-left: $size solid $color;
    }
    @else if ($direction == down) {
       border-left: $size solid transparent;
       border-right: $size solid transparent;
       border-top: $size solid $color;
    }
    @else {
       border-left: $size solid transparent;
       border-right: $size solid transparent;
       border-bottom: $size solid $color;
    }
 }

 /*
 Use Case:
 @include arrow();
 @include arrow(up, 10px, #efefef);
 */

 // Mobile First Media Queries
 @mixin breakpoint($point) {
    @if $point == large {
       @media only screen and (min-width: 1366px) {
          @content;
       }
    }
    @else if $point == desktop {
       @media only screen and (min-width: 1024px) {
          @content;
       }
    }
    @else if $point == tablet {
       @media only screen and (min-width: 600px) {
          @content;
       }
    }
 }

 /*
 Use Case:
@include breakpoint(large) {}
*/

// Add ellipses to text that is to long
@mixin text-shorten {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
 }
